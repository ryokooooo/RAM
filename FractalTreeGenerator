"```python
import turtle
from functools import partial

wn = turtle.Screen()
wn.bgcolor(""black"")

crayon = turtle.Turtle()
crayon.speed(0)
crayon.pensize(2)

colors = [""#FF00FF"", ""#FF0000"", ""#FFFF00"", ""#00FFFF"", ""#0000FF"", ""#00FF00""]

iterate = 9
angle = 30
length_factor = 1.2
pen_width_factor = 1.3


def draw_tree(turt: turtle.Turtle, depth: int, length: float) -> None:
    if depth == 0:
        return

    pen_width = turt.pensize()
    turt.colormode(255)
    turt.pencolor(tuple(int(i * (iterate - depth + 1)/iterate) for i in (255, 140, 94)))

    # Pack into a function
    turt.forward(length/2)
    draw_tree(turt=turt, depth=depth-1, length=length/length_factor)
    turt.backward(length)

    turt.pensize(pen_width*pen_width_factor)

    turt.right(angle)
    draw_tree(turt=turt, depth=depth-1, length=length)
    turt.left(angle)

    turt.left(angle)
    draw_tree(turt=turt,depth=depth-1, length=length)
    turt.right(angle)
    
    # Pack all
    turt.pensize(pen_width*pen_width_factor/pen_width_factor)
    
    # Pack into a function
    draw_tree(turt=turt,depth=depth-1, length=length)
    turt.backward(length/2)

 
_init = partial(draw_tree, crayon, iterate, length_factor)
_iterator = iter(range(iterate))
n_last_iterations = tuple(map(lambda _: next(_iterator), range(iterate - 1)))
_set_length = 165
crayon.setpos(_set_length, -17)
crayon.setpos(-_set_length, -17)
crayon.pendown()

Init_init = partial(_init, length=150)
crayon.right(180)

crayon.pensize(7)
Init_init()

wn.mainloop()
```"
